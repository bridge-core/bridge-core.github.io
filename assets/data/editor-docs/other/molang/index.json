{"hash":"09142d74752a9c68317bd3e83783011b7b394a19","data":{"markdownPage":{"id":"7c26a3b09239ed26af04fd54a2b5591b","title":"MoLang","description":"","path":"/editor-docs/other/molang/","timeToRead":3,"content":"<h1 id=\"molang\"><a href=\"#molang\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLang</h1>\n<p>A fast MoLang parser used and developed by the bridge. team. This library has full support for all of Minecraft's MoLang features.</p>\n<h2 id=\"about\"><a href=\"#about\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>About</h2>\n<blockquote>\n<p>MoLang is a simple expression-based language designed for fast calculation of values at run-time. Its focus is solely to enable script-like capabilities in high-performance systems where JavaScript is not performant at scale. We need scripting capabilities in these low-level systems to support end-user modding capabilities, custom entities, rendering, and animations.</p>\n</blockquote>\n<p>- From the Minecraft documentation</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installation</h2>\n<ul>\n<li>\n<p><code>npm i molang</code></p>\n<p><strong>or</strong></p>\n</li>\n<li>Download the <code>dist/main.web.js</code> file and add the script to your HTML page (library access via global <code>MoLang</code> object).</li>\n</ul>\n<h2 id=\"basic-usage\"><a href=\"#basic-usage\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Basic Usage</h2>\n<p>To execute a basic MoLang statement, first construct a new instance of the <code>MoLang</code> class. The first constructor argument is the environment your MoLang script will have access to and the second argument configures the MoLang interpreter. Take a look at the <code>IParserConfig</code> interface <a href=\"https://github.com/bridge-core/MoLang/blob/master/lib/main.ts\" target=\"_blank\" rel=\"noopener noreferrer\">for a list of all available options</a>.</p>\n<p><code>molang.execute(...)</code> simple executes a MoLang script and returns the value it evaluates to.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MoLang</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'molang'</span>\n\n<span class=\"token keyword\">const</span> molang <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MoLang</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tquery<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tx<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">get</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> val <span class=\"token operator\">+</span> <span class=\"token number\">4</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{</span> useCache<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\nmolang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query.x + query.get(3) == 7'</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"setting-up-nested-environments\"><a href=\"#setting-up-nested-environments\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setting up nested environments</h3>\n<p>For the context switching operator \"->\", you can set up nested environments like this:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MoLang</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Context</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'molang'</span>\n\n<span class=\"token keyword\">const</span> molang <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MoLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tquery<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\ttest<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tcontext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\tother<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\t\tquery<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> test<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmolang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query.test'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Returns 1</span>\nmolang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'context.other->query.test'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Returns 2</span></code></pre>\n<h2 id=\"using-custom-molang-functions\"><a href=\"#using-custom-molang-functions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Using Custom MoLang Functions</h2>\n<p>Custom MoLang functions were designed to support <code>.molang</code> files within bridge.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">CustomMoLang</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'molang'</span>\n\n<span class=\"token keyword\">const</span> customMoLang <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomMoLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> moLangFunctions <span class=\"token operator\">=</span> <span class=\"token spread operator\">...</span> <span class=\"token comment\">// Somehow load MoLang input that defines custom functions</span>\n\n<span class=\"token comment\">// Make custom functions known to MoLang parser</span>\ncustomMoLang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span>moLangFunctions<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> moLangSource <span class=\"token operator\">=</span> <span class=\"token spread operator\">...</span> <span class=\"token comment\">// Somehow load MoLang source from JSON files</span>\n\n<span class=\"token keyword\">const</span> transformedSource <span class=\"token operator\">=</span> customMoLang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span>moLangSource<span class=\"token punctuation\">)</span>\n<span class=\"token spread operator\">...</span> <span class=\"token comment\">// Write the transformed source string back to the JSON file or do further processing</span></code></pre>\n<p>A custom MoLang function is defined like this:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sq'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'base'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pow</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token property-access\">base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'base'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'exp'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span><span class=\"token property-access\">exp</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">.</span><span class=\"token property-access\">base</span> <span class=\"token operator\">*</span> f<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pow</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token property-access\">base</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span><span class=\"token property-access\">exp</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>The first argument always defines the function name</li>\n<li>All following arguments except the last one define input arguments</li>\n<li>The last argument is the function body</li>\n<li>Temporary variables get scoped to the current function body automatically</li>\n<li>Basic recursion is supported as long as the interpreter can stop the recursive calls at compile-time</li>\n<li>To call a function inside of MoLang scripts, simply do <code>f.sq(2)</code> or <code>f.pow(3, 2)</code></li>\n</ul>\n<h2 id=\"using-ast-scripts\"><a href=\"#using-ast-scripts\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Using AST Scripts</h2>\n<p>You can write abitrary scripts to tarverse the abstract syntax tree this library builds.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MoLang</span><span class=\"token punctuation\">,</span> expressions <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'molang'</span>\n\n<span class=\"token keyword\">const</span> moLang <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MoLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> ast <span class=\"token operator\">=</span> moLang<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">context.other->query.something + 1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">NumberExpression</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> expressions\n\n<span class=\"token comment\">// This increments all numbers within a MoLang script</span>\nast <span class=\"token operator\">=</span> ast<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">walk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">expr</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>expr <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">NumberExpression</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NumberExpression</span><span class=\"token punctuation\">(</span>expr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> ast<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'context.other->query.something+2'</span></code></pre>\n<h2 id=\"performance\"><a href=\"#performance\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Performance</h2>\n<p><strong>Disclaimer:</strong> Both bridge.'s MoLang library and Blockbench's library are usually fast enough. However, bridge.'s MoLang interpreter shines when it comes to executing a wide variety of different scripts (ineffective cache) where it is up to 10x faster interpreting a vanilla MoLang script.</p>\n<h3 id=\"vanilla-script\"><a href=\"#vanilla-script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vanilla Script</h3>\n<p>The following script gets executed 100,000 times for the first test:</p>\n<p><code>variable.hand_bob = query.life_time &#x3C; 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground &#x26;&#x26; query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;</code></p>\n<h3 id=\"molang-1\"><a href=\"#molang-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLang</h3>\n<p>Used by bridge.</p>\n<table>\n<thead>\n<tr>\n<th>Test</th>\n<th>Average Time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Parse &#x26; Execute (uncached)</td>\n<td>1253.332ms</td>\n</tr>\n<tr>\n<td>Parse &#x26; Execute (cached)</td>\n<td>90.036ms</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"molangjs\"><a href=\"#molangjs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLangJS</h3>\n<p>Used by Blockbench &#x26; Snowstorm\n| Test                       | Average Time |\n| -------------------------- | ------------ |\n| Parse &#x26; Execute (uncached) | 11872ms      |\n| Parse &#x26; Execute (cached)   | 185.299ms    |</p>\n<h3 id=\"early-return\"><a href=\"#early-return\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Early Return</h3>\n<p>The same script as above, except that we now insert a \"return 1;\" in front of it. bridge.'s interpreter is smart enough to figure out that the whole expression is static after it parsed <code>return 1;</code>. These kinds of optimizations can be found throughout our library.</p>\n<h3 id=\"molang-2\"><a href=\"#molang-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLang</h3>\n<p>Used by bridge.</p>\n<table>\n<thead>\n<tr>\n<th>Test</th>\n<th>Average Time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Parse &#x26; Execute (uncached)</td>\n<td>103.61ms</td>\n</tr>\n<tr>\n<td>Parse &#x26; Execute (cached)</td>\n<td>8.835ms</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"molangjs-1\"><a href=\"#molangjs-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLangJS</h3>\n<p>Used by Blockbench &#x26; Snowstorm\n| Test                       | Average Time |\n| -------------------------- | ------------ |\n| Parse &#x26; Execute (uncached) | 13230.682ms  |\n| Parse &#x26; Execute (cached)   | 147,786ms    |</p>\n<h2 id=\"molang-playground\"><a href=\"#molang-playground\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MoLang Playground</h2>\n<p>We have built a very basic MoLang playground with this interpreter. You can use it at <a href=\"https://bridge-core.github.io/molang-playground\" target=\"_blank\" rel=\"noopener noreferrer\">bridge-core.github.io/molang-playground</a>.</p>\n","sidebar":"editor","next":"/extension-docs/","prev":"","author":{"path":"/author/solveddev/","title":"solvedDev","image":{"type":"image","mimeType":"image/png","src":"/assets/static/icon.3df3210.18a6f12f3c5b833dc44f332f7e01bcd1.png","size":{"width":1024,"height":1024},"sizes":"(max-width: 1024px) 100vw, 1024px","srcset":["/assets/static/icon.1b91758.18a6f12f3c5b833dc44f332f7e01bcd1.png 480w","/assets/static/icon.3df3210.18a6f12f3c5b833dc44f332f7e01bcd1.png 1024w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-118de03aa84a083e19987e4a607deceb'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-118de03aa84a083e19987e4a607deceb)' width='1024' height='1024' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAABACAIAAAAlC%2baJAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAKeklEQVRo3rVae2xT1xk/tkPpHmppK1ZN7EXFRrdp7QQafUgUyoCkBbqBqmnS/pimTprWQdetpcBWWthEu0LahJBXeT9KEvJOHDuEvP24dhw7tuM4tmM7ThwSgvMiJM3bzr5zTxIc%2b97re21z9enKubF9v9/vO79zfue7RuiQPM5xUIY%2brUdZWpSpiWekU%2bhCM5LaUcXyiH/2x6vjn32GBmVrUWk7kjkeJoCDcvRhFaYqSxNnABAFFiQPyz6eAD6Qo8OVKFX1UAZPjok5%2b7gCkKFTjbjQcc/%2bioFh5MQZAAz9T%2boeSvbndEhqQzJ7fACID0NUhoQIuD9WHV2KokyNOIuElg78WhQs3BIrkrNnLwAAjG%2bg%2bR9S9C5E%2bbI4Uik6oxZlRZM9OkOh06rlocYXyXvyLaxDXzCA96RPH6/enKV57WLzb67o910z/PaqYfdl/daz2nWXmhNAuOmU0JkxIVOzPse0vbz9Dbl9b6VjX6Vjj8y%2bvcy67qsWlKZEXxkjZ88HAAwSdKBoU2q9b2xqfn4%2bML/s8Afm5wIBWffIt882oQxKxJP4DGpltra0c9gfCPjDvhDusZ/qRHktEpk9DgAkAGB/4auZyuDbBIKQAAA4H9F0o1SlhIeOJVCuFOV%2bhYdONxDyhbP0leQOH8rRJ1TY4gBABADeLxf/s1jnHQ6%2bZTAYOO58PbPmsh4GErcY8H/TqVXnda7RyQW%2bw74Kzi/VOVCBUSyLxxCiiyBHb%2bf/MUfPCGCpCCdbenEROBcyQv9BqmvpU%2bHfc7P/PspvEZVbUbwA0EUoE79XrO3iKsLo9Nx60N8ZtTiLi/7VF5u9Y9P4U0z0w/FqQwfKN/ISAP9ZCBfhb/lvXKDCbxxM3llrP7gJMUsRsEJSVEebejjov9EzjPL04vJ2XvQLWchgHShH7xRUOe7im/mZizDtD2y4YUZp6nAMhH7QCaiFjf4pf%2bCXt2yowCTmmb2glVgCK%2b77pVvyDCEVD6EwzzkI61H4KMKjP1X5iaGXg/501wDK1Uuk7XyzFwAAsv/3TfFpJUquySNFYFECHJuLLDSGB0XAeM6o1141DE3NhoMnf/qmZ39U0YYKTSL%2b9AvzQl8oxV82oeS656/ppuYCHEWo6BqGdEVh9KeY%2bjjoP9rWh%2bnnM/cLBgAu6LMGYjYlmWp0sjrddJsxlSVUSWAhT6vIlErohwnq/swcw1pOn53j00%2bUtqLiVmH08wIA2f%2b3FmUvaVGLvqhfe54amJzhKEJD7yj4BWIcaPpV2W39jJjJdPAXgxflGgTTHxkAZP/RLZx6kCglmRT6rPpjjYetCCSnN286IO8VULc09S9yTZNzfkYrBUfz8MSKIiMqaRNMfwQAsEv81024fcguERchteGpLIWbtgPhEBbS8o2DS8VKOK26bPNx6H4vtm5Avx1FEZGEq2DcZ5EivF3n4C7Cn%2bvdKLnxhYLWWT%2bD6MkHq2njgMraUBT0cwGAwfO/erZdIi5CmmJlWkOLb4zRXBAA9pHJhAzNdcdAOM4ojQNfAJD9f2pQBFumQSdrfidrCzeVwSnmdgyOTM%2bx0Z%2b/YBysUdLPDACyPxoqXGZndkaJUurqe0a4p1S269EYh8gAsHArw4XLWoRTNTuKjPPsB4fzi8Y48KrA5wr%2bDRJRugowlLoG2IrARn%2bUxiECANKXFdLewatscu2m680kez4IYjIOywNLX5BwmTFkYHNxoa2PTxGI3F3j009GZxwWQwRnqf3njV3oQfYfVuHFP4r2Dnwkpf6ZC9QIk9MMo3/JOMCe3R5D9rYf1rp362%2bjBeEeqcRNpexoumvYNp9WrruouTfNF8Axax8qMEuiop9w/%2bQtZ5Lu9mu6JQDJiqg7mzQA1RXbXT5DiPx7ZGbux7VuVG4Ty6LJ/hvyjq1a7%2bvNtxMxAOHCDc/%2b5UJLgHPiDy/C2e4RVNouFr4Aiyvsm1Tdu5t7IfskDOB4NcqMvqtM9zfVMrpbIWganQkENio8qEwABkL/zxo9exazpwHE8ECFGP3dMhsb9wGW66QIRX1jqNQmkgkQ7vdr3bvokZP0AEBWDNzDEMrUUP1jbA0vDmDk2EZ5YSBFdHKE%2b1VVzkRauEnLAGTGQr/yT7UuRjNHrmS4B6jBccY3kCJUD4yDlPlk/6jcsVWzINw4ACAd5sfONdlHJthanEPTc4%2bXmH%2bv9XDb1b0wl0cqAmD4VZBw4wAA99hSlYc13RxdhuPtd2Cb%2b0ixWTf8NUeVdCOTkgrHAtMs9D/bsEy4sQKgjbT6B1cM/RMzbE2enomZp6UWVN4ObvlNTedS94ERw1vmO6jEGr6uEeGuqXXtChs5MQEgk0%2bqmavJc6i1F90wJsgdNAajYmCMowj28enHKjsgV1EY94/fdO5sChVuTADwypWmfp6zywBebRV4tTIreDXMa75xj8o9zzmlHrL5UEn7UhFI9ivljleYhBsjANxlyHMOstCPzweMPfQ2d3FIQBHyW2DzztGY6JuaXVPtghkpuAgbWYQbPQAJbRy2lrQxzvGEfuvo5LdKzJD0klXGSApMOxqd3ObilHuILsIC/esbPBGzj0oD6VS19x5Hj%2b0tfTfKN4UoUiS1oRst0t57HEW4P%2bf/aR12eCCG79Zg4SbpIgcSqt19lQ7G0UyybxmZeKTYhOkPcWCAp9C8me4jcTQkL3nvQRFgxeUWbjQA6JVLsyJbq/eNc8wnf2jyhNO/gAEXwVDA0sIILI6ll6nuDaquPfrIg0cYAPrhnOqvjZ0c2WuGxkVFphAhhhRhU42dvJmthqrhiW3aHp708wVAng49dV7nHp1i7JSQC/uoThArxz5LXIGLcKVriNt7H7YPbNH0vB5HDdAP55THdD0c2m30jaFCY8hixFCEotbnqton/QGOIpjvT%2b1s6olbBcjjiWeutQxNMm95yZVdShefbS5uQecZstwD3M28E64hsoTFAUCwcZhlMQ5V/aPgF3htCAFhcetPKq2js36OIljHpuMjYjL6v3NJP0DTD/vA2aCA7EkGsEiBQHl2GUgRPnf4CCNz9M9FgoNg%2bMA2sFUbWQko8vhJp9ZeNYwy9XzInS56BvEvA/h3FgBnieV7UgtYJtYtW2D%2bSPvdLbEDWFgBUho2Vljebe39yNp3wt7/qb3/hK3/Y%2budv5tuJyrdj4J2SyyC%2buMYbaFxdbnlgKnngmfwWvdQrncY4nr38GXPYKbL947R%2b2uFK0nXE7MGsPdUonNq/BAlR49ymumz/sHrPD2e%2b6UCuyOAtqxtZZFxQ439pTrHC7X2F%2bsWgrx%2bpaFjh8K5U9OV1NwbG4AMCn2pBoFClglMIQb6S62oQnCPLUFmf7HeCXNXotKVFBY7lU4MAF7HVAGcfROsTXiCL2wJjQL6XGyOrjf4nKJrd5N3u8K5o7EDh2J5kIuxAoAoakOwfJZa8CgvaV0WcLHMin8TKbwvu7Zuob2TqPUmUp6dEOrOZUF5EqmupCZvDADSKZRrXvzZnYN5HAvszpLsVy/2ZekMeulgSi7S6OcEANlfbUEye0zPTsJDav9mZcc2enJM5G3XhAPIoH/ojjmOMwAxCFcNu8S4ZQ/xf8P/NDReXBYsAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"position":"Project Lead"},"headings":[{"depth":1,"value":"MoLang","anchor":"#molang"},{"depth":2,"value":"About","anchor":"#about"},{"depth":2,"value":"Installation","anchor":"#installation"},{"depth":2,"value":"Basic Usage","anchor":"#basic-usage"},{"depth":3,"value":"Setting up nested environments","anchor":"#setting-up-nested-environments"},{"depth":2,"value":"Using Custom MoLang Functions","anchor":"#using-custom-molang-functions"},{"depth":2,"value":"Using AST Scripts","anchor":"#using-ast-scripts"},{"depth":2,"value":"Performance","anchor":"#performance"},{"depth":3,"value":"Vanilla Script","anchor":"#vanilla-script"},{"depth":3,"value":"MoLang","anchor":"#molang-1"},{"depth":3,"value":"MoLangJS","anchor":"#molangjs"},{"depth":3,"value":"Early Return","anchor":"#early-return"},{"depth":3,"value":"MoLang","anchor":"#molang-2"},{"depth":3,"value":"MoLangJS","anchor":"#molangjs-1"},{"depth":2,"value":"MoLang Playground","anchor":"#molang-playground"}],"fileInfo":{"path":"editor-docs/other/molang.md"}},"allMarkdownPage":{"edges":[{"node":{"path":"/extension-docs/scripts/modules/bridge-windows/","title":"@bridge/windows"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-utils/","title":"@bridge/utils"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-ui/","title":"@bridge/ui"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-toolbar/","title":"@bridge/toolbar"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-theme/","title":"@bridge/theme"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-tab/","title":"@bridge/tab"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-tab-actions/","title":"@bridge/tab-actions"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-sidebar/","title":"@bridge/sidebar"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-project/","title":"@bridge/project"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-path/","title":"@bridge/path"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-notifications/","title":"@bridge/notifications"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-monaco/","title":"@bridge/monaco"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-json5/","title":"@bridge/json5"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-globals/","title":"@bridge/globals"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-fs/","title":"@bridge/fs"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-file-importer/","title":"@bridge/file-importer"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-fetch-definition/","title":"@bridge/fetch-definition"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-env/","title":"@bridge/env"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-compare-versions/","title":"@bridge/compare-versions"}},{"node":{"path":"/extension-docs/scripts/modules/bridge-com-mojang/","title":"@bridge/com-mojang"}},{"node":{"path":"/extension-docs/scripts/interfaces/signal/","title":"Signal<T\\>"}},{"node":{"path":"/extension-docs/scripts/interfaces/sidebarelement/","title":"SidebarElement"}},{"node":{"path":"/extension-docs/scripts/interfaces/itabpreviewconfig/","title":"ITabPreviewConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/itabactionconfig/","title":"ITabActionConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/isidebarconfig/","title":"ISidebarConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/inotificationconfig/","title":"INotificationConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/imkdirconfig/","title":"IMkdirConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/igethandleconfig/","title":"IGetHandleConfig"}},{"node":{"path":"/extension-docs/scripts/interfaces/iexporter/","title":"IExporter"}},{"node":{"path":"/extension-docs/scripts/interfaces/idisposable/","title":"IDisposable"}},{"node":{"path":"/extension-docs/scripts/interfaces/builtin/","title":"BuiltIn"}},{"node":{"path":"/extension-docs/other/default-file-types/","title":"Default File Types"}},{"node":{"path":"/extension-docs/scripts/","title":"Scripts"}},{"node":{"path":"/extension-docs/json/themes/","title":"Themes"}},{"node":{"path":"/extension-docs/json/snippets/","title":"Snippets"}},{"node":{"path":"/extension-docs/json/presets/","title":"Presets"}},{"node":{"path":"/extension-docs/json/lightning-cache/","title":"Lightning Cache"}},{"node":{"path":"/extension-docs/json/file-definitions/","title":"File Definitions"}},{"node":{"path":"/editor-docs/other/molang/","title":"MoLang"}},{"node":{"path":"/editor-docs/other/model-viewer/","title":"model-viewer"}},{"node":{"path":"/editor-docs/migration-guide/","title":"bridge. v2 Migration"}},{"node":{"path":"/editor-docs/getting-started/","title":"Getting Started"}},{"node":{"path":"/editor-docs/faq/","title":"FAQ"}},{"node":{"path":"/extension-docs/","title":"Extension API"}},{"node":{"path":"/extension-docs/extension-manifest/","title":"Extension Manifest"}},{"node":{"path":"/extension-docs/custom-molang/","title":"Custom MoLang"}},{"node":{"path":"/extension-docs/custom-components/","title":"Custom Components"}},{"node":{"path":"/extension-docs/custom-commands/","title":"Custom Commands"}},{"node":{"path":"/extension-docs/contributing/","title":"Contributing Extensions"}},{"node":{"path":"/extension-docs/compiler-plugins/","title":"Compiler Plugins"}},{"node":{"path":"/editor-docs/","title":"Editor"}},{"node":{"path":"/editor-docs/features/","title":"Feature Overview"}}]}},"context":{}}